//BASE DIRECTORIES
basedir = "/media/DATOS/cmora/rnaseq_rebeca24"
datadir = "/media/DATOS/BASESDATOS/"
condabase = "/home/ccarlos/anaconda3/envs"
dockerrepo = "carlosmora91/cmora_images"

//INPUTS
params.raw_fastq = "$basedir/simulate_readsCD57/simulated_fastq_bygene_error0/*_R{1,2}.fastq.gz"

//OUTPUTS
env.results_dir = "$basedir/results/test_simulated2_error0"

//DIRECTORY WITH ADDITIONAL SCRIPTS
params.scriptsdir = "$env.results_dir/RevMetCM/scripts/" //not used so far

//SOFTWARE PATHS
// These are paths in docker containers; can be configured differently if using conda, etc
params.software.picard_path = "/software/picard.jar" //Path in docker
params.software.gatk_path = "/software/gatk-4.5.0.0/gatk-package-4.5.0.0-local.jar" //Path in docker
params.software.gtftorefflat_path = "/software/GtftoRefflat-assembly-0.1.jar"

//Global genome options
genomename = "mm39"  
fasta = "$datadir/mouse_genome/mm39/mm39.fa"
transcripts_fasta = "$datadir/mouse_genome/mm39/mm39.ncbiRefSeq.transcripts.fasta" 
annot =  "$datadir/mouse_genome/mm39/genes/mm39.ncbiRefSeq.gtf" 
rRNA_bed = "$datadir/mouse_genome/mm39/mm39_rRNA.sorted.bed" 

// Global workflow control
params.workflows.doCleanFastq = true //Execute the cleanfastq workflow (trimming and fastqc)
params.workflows.do_trim = false  //Do trimming with the selected tool
params.workflows.trimming_tool = "trimmomatic" //trimming tool: trimmomatic, cutadapt or bbduk --> with cutadapt hisat2 seems to align more
params.workflows.doMultiQC = true
params.workflows.do_hisat2 = true
params.workflows.do_star = true
params.workflows.do_subread = false
params.workflows.do_bbmap = false
params.workflows.do_stringtie = true
params.workflows.do_salmon = true
params.workflows.do_kallisto = true
params.workflows.do_featureCounts = true
params.workflows.do_htseq = true

// Rule getFastQCIllumina: Quality control of input and trimmed fastq using FastQC
params.getFastQCIllumina.conda = "$condabase/fastqc-env"
params.resources.getFastQCIllumina.cpus= 4
params.resources.getFastQCIllumina.mem = "4 GB"
params.getFastQCIllumina.do_fastqc_raw = true
params.getFastQCIllumina.do_fastqc_trim = true
params.getFastQCIllumina.do_fastqc_trim_single = true

//Rule doTrimmomatic: trim fastq
params.doTrimmomatic.conda = "$condabase/trimmomatic-env"
params.resources.doTrimmomatic.cpus= 4
params.resources.doTrimmomatic.mem = "4 GB"
params.doTrimmomatic.illuminaclip = "$datadir/illumina_adapters/illumina_truseq.fasta:2:30:10"
params.doTrimmomatic.slidingwindow = "20:30"
params.doTrimmomatic.minlen = 75


//Rule doCutadapt: trim fastq
params.doCutadapt.conda = "$condabase/"
params.resources.doCutadapt.cpus= 4
params.resources.doCutadapt.mem = "4 GB"
params.doCutadapt.illuminaclip = "$datadir/illumina_adapters/illumina_truseq.fasta"
params.doCutadapt.minlength = "75:75"
params.doCutadapt.quality_cutoff_fw = 20
params.doCutadapt.quality_cutoff_rv = 20
params.doCutadapt.extra_args = ""

//Rule doBBduk: trim fastq
params.doBBduk.conda = "$condabase/"
params.resources.doBBduk.cpus= 4
params.resources.doBBduk.mem = "4 GB"
params.doBBduk.illuminaclip = "$datadir/illumina_adapters/illumina_truseq.fasta"
params.doBBduk.k = 23
params.doBBduk.mink = 11
params.doBBduk.hdist = 1
params.doBBduk.trimpolya=10
params.doBBduk.extra_args=""

//Rule buildindexBBMap: index
params.buildindexBBMap.conda = "$condabase/"
params.resources.buildindexBBMap.cpus= 8
params.resources.buildindexBBMap.mem = "24 GB"
params.buildindexBBMap.index_dir = "BBMap_$genomename"
params.buildindexBBMap.fasta = "$fasta"
params.buildindexBBMap.k = 13
params.buildindexBBMap.clean_fasta_regex = "'s/ [0-9 a-zA-Z]*//'"
params.buildindexBBMap.do_index = true


//Rule alignBBMap: align
params.alignBBMap.conda = "$condabase/"
params.resources.alignBBMap.cpus= 12
params.resources.alignBBMap.mem = "48 GB"
params.alignBBMap.index = "$datadir//indices/Ce_PRJEB28388_WS292/test/ref/" 
params.alignBBMap.options = "killbadpairs=f pairedonly=f local=f" //These are defaults
params.alignBBMap.maxindel = "200k"
params.alignBBMap.secondary = "f"
params.alignBBMap.intronlen = 20
params.alignBBMap.ambig = "random" //all
params.alignBBMap.xstag = "ss"

//Rule buildindexHISAT2: index
params.buildindexHISAT2.conda = "$condabase/"
params.resources.buildindexHISAT2.cpus= 12
params.resources.buildindexHISAT2.mem = "200 GB"
params.buildindexHISAT2.index_dir = "HISAT2-2.2.1_$genomename"
params.buildindexHISAT2.index_name = "WS292_trans"
params.buildindexHISAT2.fasta = "$fasta"
params.buildindexHISAT2.annot = "$annot"
params.buildindexHISAT2.options = ""
params.buildindexHISAT2.do_index = true

//Rule alignHISAT2: align
params.alignHISAT2.conda = "$condabase/"
params.resources.alignHISAT2.cpus= 12
params.resources.alignHISAT2.mem = "12 GB"
params.alignHISAT2.index = "$datadir/indices/Ce_PRJEB28388_WS292/hisat2_index/genome_tran_ce" ///indices/hisat2_mm38_Kim_genome_trans/grcm38_tran/genome_tran"
params.alignHISAT2.options = "--phred33 --dta " //dta for downstream transcriptome assembly; --tmo only mapping (seems to align less reads)

// Rule buildindexSTAR: index genome
params.buildindexSTAR.conda = "$condabase/"
params.resources.buildindexSTAR.cpus= 12
params.resources.buildindexSTAR.mem = "200 GB"
params.buildindexSTAR.index_name = 
params.buildindexSTAR.genomeSAindexNbases = 12 //14 for bigger genomes
params.buildindexSTAR.sjdbOverhang = 100
params.buildindexSTAR.index_name = "STAR2.7.11b_$genomename"
params.buildindexSTAR.fasta = "$fasta"
params.buildindexSTAR.annot = "$annot"
params.buildindexSTAR.do_index = true

//Rule alignSTAR: align
params.alignSTAR.conda = "$condabase/"
params.resources.alignSTAR.cpus= 12
params.resources.alignSTAR.mem = "100 GB"
params.alignSTAR.index = "$datadir/indices/Ce_PRJEB28388_WS292/star_index/"
params.alignSTAR.options = "outFilterMultimapNmax 10 --alignSJoverhangMin 8 --outFilterType BySJout" 

//Rule alignSTAR2ndPass: align with splice junctions from 1st pass
params.alignSTAR2ndPass.conda = "$condabase/"
params.resources.alignSTAR2ndPass.cpus= 12
params.resources.alignSTAR2ndPass.mem = "100 GB"
params.alignSTAR2ndPass.index = "$datadir/indices/Ce_PRJEB28388_WS292/star_index/"
params.alignSTAR2ndPass.options = "outFilterMultimapNmax 10 --alignSJoverhangMin 8 --outFilterType BySJout"  
params.alignSTAR2ndPass.do_star = false

//Rule alignSubread: index
params.buildindexSubread.conda = "$condabase/"
params.resources.buildindexSubread.cpus= 12
params.resources.buildindexSubread.mem = "48 GB"
params.buildindexSubread.index_dir = "Subread-2.0.6_$genomename"
params.buildindexSubread.index_name = "$genomename"
params.buildindexSubread.fasta = "$fasta"
params.buildindexSubread.options = "-B -F" //-B: one block index. -F: Full index. Both make alignment faster.
params.buildindexSubread.do_index = true

//Rule alignSubread: align
params.alignSubread.conda = "$condabase/"
params.resources.alignSubread.cpus= 12
params.resources.alignSubread.mem = "12 GB"
params.alignSubread.index_prefix = "$datadir/indices/Ce_PRJEB28388_WS292/test_subread/testxx" ///indices/Subread_mm38_Kim_genome_trans/grcm38_tran/genome_tran"
params.alignSubread.options = "-P 3 -S fr -B 10 " //P 3: phred33; S fr: strandedness fw-rv; -B 10: number of locations equally good
params.alignSubread.annot = "$annot"

// Rule quantStringtie2: quantify
params.quantStringtie2.conda = "$condabase/"
params.resources.quantStringtie2.cpus= 4
params.resources.quantStringtie2.mem = "4 GB"
params.quantStringtie2.annot = "$annot"
params.quantStringtie2.options = ""

// Rule mergeStringtie2: quantify
params.mergeStringtie2.conda = "$condabase/"
params.resources.mergeStringtie2.cpus= 4
params.resources.mergeStringtie2.mem = "8 GB"
params.mergeStringtie2.readlength = 150
params.mergeStringtie2.do_merge = false

// Rule quantFeatureCounts: quantify
params.quantFeatureCounts.conda = "$condabase/"
params.resources.quantFeatureCounts.cpus= 8
params.resources.quantFeatureCounts.mem = "8 GB"
params.quantFeatureCounts.annot = "$annot"
params.quantFeatureCounts.strandedness = 2 // 0 no stranded, 1 F, 2 R
params.quantFeatureCounts.options = "--countReadPairs"

// Rule quantHTSeq: quantify
params.quantHTSeq.conda = "$condabase/"
params.resources.quantHTSeq.cpus= 4
params.resources.quantHTSeq.mem = "40 GB"
params.quantHTSeq.annot = "$annot"
params.quantHTSeq.minaqual = 10
params.quantHTSeq.stranded = 'no' //yes, no, reverse
params.quantHTSeq.secondary_alignments = 'ignore'
params.quantHTSeq.supplementary_alignments = 'score'
params.quantHTSeq.options = ""
params.quantHTSeq.mode_list = 'union' //"union,intersection-strict,intersection-nonempty" // Several modes separated by comma; run several times
params.quantHTSeq.nonunique_list = 'none,all' //"none,all,fraction,random" // Several options separated by comma; run several times
params.quantHTSeq.cleaning_names_regex = "'1s/[._][a-zA-Z._0-9]*bam//g'" // Remove this string from HTseq result header
params.quantHTSeq.do_all_together = false

// Rule mapdecoySalmontools: create salmon index 
params.mapdecoySalmontools.conda = "$condabase/"
params.resources.mapdecoySalmontools.cpus= 6
params.resources.mapdecoySalmontools.mem = "240 GB"
params.mapdecoySalmontools.name = "partial_decoy_$genomename"
params.mapdecoySalmontools.transcripts_fasta = "$transcripts_fasta"
params.mapdecoySalmontools.genome_fasta = "$fasta"
params.mapdecoySalmontools.annot = "$annot"

// Rule buildindexSalmon
params.buildindexSalmon.conda = "$condabase/"
params.resources.buildindexSalmon.cpus= 12
params.resources.buildindexSalmon.mem = "12 GB"
params.buildindexSalmon.name = "Salmon-1.10.3_$genomename"
params.buildindexSalmon.transcripts_fasta = "$transcripts_fasta"
params.buildindexSalmon.genome_fasta = "$fasta"
params.buildindexSalmon.annot = "$annot"
params.buildindexSalmon.mode = "transcripts_only" // transcripts_only, genome_decoy, partial_decoy, all
params.buildindexSalmon.k = 31
params.buildindexSalmon.options = ""
params.buildindexSalmon.do_index = true


// Rule quantSalmon: quantify
params.quantSalmon.conda = "$condabase/"
params.resources.quantSalmon.cpus= 12
params.resources.quantSalmon.mem = "12 GB"
params.quantSalmon.index = "$datadir/indices/Ce_PRJEB28388_WS292/salmon_index"
params.quantSalmon.options = "--dumpEq --seqBias --gcBias"
params.quantSalmon.do_salmon = true

// Rule quantBamSalmon: quantify fom bam (generated with STAR)
params.quantBamSalmon.conda = "$condabase/"
params.resources.quantBamSalmon.cpus= 12
params.resources.quantBamSalmon.mem = "12 GB"
params.quantBamSalmon.transcripts_fasta = "$transcripts_fasta"
params.quantBamSalmon.options = "--dumpEq --seqBias --gcBias"
params.quantBamSalmon.do_salmon = true

// Rule mergeSalmon: qumerge salmon output
params.mergeSalmon.conda = "$condabase/"
params.resources.mergeSalmon.cpus= 4
params.resources.mergeSalmon.mem = "8 GB"

// Rule buildindex  Kallisto
params.buildindexKallisto.conda = "$condabase/"
params.resources.buildindexKallisto.cpus= 12
params.resources.buildindexKallisto.mem = "12 GB"
params.buildindexKallisto.index_name = "Kallisto-0.50.1_$genomename"
params.buildindexKallisto.transcripts_fasta = "$transcripts_fasta"
params.buildindexKallisto.k = 31
params.buildindexKallisto.options = ""
params.buildindexKallisto.do_index = true

// Rule quantKallisto: quantify
params.quantKallisto.conda = "$condabase/"
params.resources.quantKallisto.cpus= 12
params.resources.quantKallisto.mem = "24 GB"
params.quantKallisto.index = "$datadir/indices/Ce_PRJEB28388_WS292/kallistotest.idx"
params.quantKallisto.num_bootstraps = 100
params.quantKallisto.options = "" //--plaintext 

// Rule buildRefflatFromGTF: build refflat file for picardRNASeqMetrics
params.buildRefflatFromGTF.conda = "$condabase/"
params.resources.buildRefflatFromGTF.cpus= 2
params.resources.buildRefflatFromGTF.mem = "2 GB"
params.buildRefflatFromGTF.genome_fasta = "$fasta"
params.buildRefflatFromGTF.annot = "$annot"
params.buildRefflatFromGTF.do = true

// Rule buildIntervalListFromBed: build rRNA file for picardRNASeqMetrics
params.buildIntervalListFromBed.conda = "$condabase/"
params.resources.buildIntervalListFromBed.cpus= 4
params.resources.buildIntervalListFromBed.mem = "2 GB"
params.buildIntervalListFromBed.genome_fasta = "$fasta"
params.buildIntervalListFromBed.bed = "$rRNA_bed"
params.buildIntervalListFromBed.do = true

// Rule picardMarkDuplicates
params.picardMarkDuplicates.conda = "$condabase/"
params.resources.picardMarkDuplicates.cpus= 2
params.resources.picardMarkDuplicates.mem = "32 GB"
params.picardMarkDuplicates.options = ""
params.picardMarkDuplicates.do = false

// Rule picardRNASeqMetrics
params.picardRNASeqMetrics.conda = "$condabase/"
params.resources.picardRNASeqMetrics.cpus= 2
params.resources.picardRNASeqMetrics.mem = "32 GB"
params.picardRNASeqMetrics.refflat = "$datadir/"
params.picardRNASeqMetrics.rRNA_interval_list = "$datadir/"
params.picardRNASeqMetrics.strand = "SECOND_READ_TRANSCRIPTION_STRAND" // FIRST_READ_TRANSCRIPTION_STRAND SECOND_READ_TRANSCRIPTION_STRAND
params.picardRNASeqMetrics.options = ""
params.picardRNASeqMetrics.do = false

// Rule rnaSeQC
params.rnaSeQC.conda = "$condabase/"
params.resources.rnaSeQC.cpus= 2
params.resources.rnaSeQC.mem = "32 GB"
params.rnaSeQC.annot = "$annot"
params.rnaSeQC.detection_threshold = 5
params.rnaSeQC.options = "--coverage --stranded \"FR\"" // -- stranded "FR"
params.rnaSeQC.do = false

//Rule multiQC
params.multiQC.conda = "$condabase/multiqc-env"
params.resources.multiQC.cpus= 12
params.resources.multiQC.mem = "24 GB"
params.multiQC.configyaml = "/media/DATOS/cmora/rnaseq_rebeca24/rnaseqO3/assets/multiqc_1.yaml"


//*****************//
// GENERAL OPTIONS //
//*****************//
cleanup = false
conda.enabled = false
params.resources.default.cpus = 4
params.resources.default.mem = "8 GB"

params.mapping_tool = "bowtie2"

profiles {
    conda {
      process.conda = "$condabase/bioinfo1"
    }
}

dag {
    enabled = true
    overwrite = true
    file = "pipeline_dag.html"
}
report {
    enabled = true
    overwrite = true
    file = "report.html"
}

//process {
//  executor = "slurm"
//  queueSize = 200
//  submitRateLimit = "10sec"
//}

// DOCKER OPTIONS
process {
    withName:doTrimmomatic{
        container = 'staphb/trimmomatic'
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:doCutadapt{
        container = 'pipecraft/cutadapt:0'
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:doBBduk{
        container = 'nanozoo/bbmap:38.86--9ebcbfa' // 'staphb/bbtools' falla, necesita dependencias
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:buildindexHISAT2{
        container = "$dockerrepo:HISAT2-2.2.1" //'nanozoo/hisat2:2.2.1--75357cd'
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:alignHISAT2{
        container = "$dockerrepo:HISAT2-2.2.1" //'nanozoo/hisat2:2.2.1--75357cd'
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:buildindexSTAR{
        container =  "$dockerrepo:STAR-2.7.11b" // 'nanozoo/hisat2:2.2.1--75357cd'// 'mpgagebioinformatics/star:2.7.11b'
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:alignSTAR{
        container =  "$dockerrepo:STAR-2.7.11b" // 'nanozoo/hisat2:2.2.1--75357cd'// 'mpgagebioinformatics/star:2.7.11b'
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"   
    }
    withName:buildindexSubread{
        container = "$dockerrepo:subread-2.0.6" 
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:alignSubread{
        container = "$dockerrepo:subread-2.0.6"
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:buildindexBBMap{
        container = "nanozoo/bbmap:38.86--9ebcbfa" 
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:alignBBMap{
        container = "nanozoo/bbmap:38.86--9ebcbfa"
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:alignSTAR2ndPass{
        container =  "$dockerrepo:STAR-2.7.11b"
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:quantStringtie2{
        container =  "$dockerrepo:stringtie2-v2.2.2"
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:mergeStringtie2{
        container =  "$dockerrepo:stringtie2-v2.2.2"
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:quantFeatureCounts{
        container =  "$dockerrepo:subread-2.0.6"
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:quantHTSeq{
        container =  "$dockerrepo:HTSeq-2.0.5"
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:mapdecoySalmontools{
        container =  "$dockerrepo:salmondecoy"
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:buildindexSalmon{
        container =  "combinelab/salmon"
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:quantSalmon{
        container =  'combinelab/salmon'
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:quantBamSalmon{
        container =  'combinelab/salmon'
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:mergeSalmon{
        container =  'combinelab/salmon'
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:buildindexKallisto{
        container =  "$dockerrepo:kallisto-0.50.1"
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:quantKallisto{
        container =  "$dockerrepo:kallisto-0.50.1"
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:getFastQCIllumina {
        container = 'staphb/fastqc'
    }
    withName:buildRefflatFromGTF{
        container =  "$dockerrepo:picard-3.1.1"
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:picardRNASeqMetrics{
        container =  "$dockerrepo:picard-3.1.1"
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:picardMarkDuplicates{
        container =  "$dockerrepo:picard-3.1.1"
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:buildIntervalListFromBed{
        container =  "$dockerrepo:picard-3.1.1"
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:rnaSeQC{
        container =  'gcr.io/broad-cga-aarong-gtex/rnaseqc'
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:multiQC {
        container = 'pegi3s/multiqc'
    }
}

docker {
    enabled = true
    sudo = true
}

