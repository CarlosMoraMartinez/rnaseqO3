//BASE DIRECTORIES
basedir = "/home/ccarlos/repos/rnaseqO3/"
datadir = "/home/ccarlos/data/resources"
condabase = "/home/ccarlos/anaconda3/envs"

//INPUTS
params.raw_fastq = "$basedir/test_data/corte/*_{1,2}.fastq.gz"

//OUTPUTS
env.results_dir = "$basedir/results/test2"

//DIRECTORY WITH ADDITIONAL SCRIPTS
params.scriptsdir = "$env.results_dir/RevMetCM/scripts/"


params.workflows.doCleanFastq = true //Execute the cleanfastq workflow (trimming and fastqc)
params.workflows.do_trim = true  //Do trimming with the selected tool
params.workflows.trimming_tool = "bbduk" //trimming tool: trimmomatic, cutadapt or bbduk
params.workflows.doMultiQC = true


// Rule getFastQCIllumina: Quality control of input and trimmed fastq using FastQC
params.getFastQCIllumina.conda = "$condabase/fastqc-env"
params.resources.getFastQCIllumina.cpus= 4
params.resources.getFastQCIllumina.mem = "4 GB"
params.getFastQCIllumina.do_fastqc_raw = true
params.getFastQCIllumina.do_fastqc_trim = true
params.getFastQCIllumina.do_fastqc_trim_single = true

//Rule doTrimmomatic: trim fastq
params.doTrimmomatic.conda = "$condabase/trimmomatic-env"
params.resources.doTrimmomatic.cpus= 4
params.resources.doTrimmomatic.mem = "4 GB"
params.doTrimmomatic.illuminaclip = "$datadir/Adapters-for-MGI_simpletrimming.txt:2:30:10"
params.doTrimmomatic.slidingwindow = "20:30"
params.doTrimmomatic.minlen = 75


//Rule doCutadapt: trim fastq
params.doCutadapt.conda = "$condabase/"
params.resources.doCutadapt.cpus= 4
params.resources.doCutadapt.mem = "4 GB"
params.doCutadapt.illuminaclip = "$datadir/Adapters-for-MGI_simpletrimming.txt"
params.doCutadapt.minlength = "75:75"
params.doCutadapt.quality_cutoff_fw = 20
params.doCutadapt.quality_cutoff_rv = 20
params.doCutadapt.extra_args = ""
params.doCutadapt.do_trim = true

//Rule doBBduk: trim fastq
params.doBBduk.conda = "$condabase/"
params.resources.doBBduk.cpus= 4
params.resources.doBBduk.mem = "4 GB"
params.doBBduk.illuminaclip = "$datadir/Adapters-for-MGI_simpletrimming.fasta"
params.doBBduk.k = 23
params.doBBduk.mink = 11
params.doBBduk.hdist = 1
params.doBBduk.trimpolya=10
params.doBBduk.extra_args=""
params.doBBduk.do_trim = true

//Rule alignBowtie2: align
params.alignBowtie2.conda = "$condabase/bowtie2-env"
params.resources.alignBowtie2.cpus= 12
params.resources.alignBowtie2.mem = "12 GB"
params.alignBowtie2.index = "$datadir/indices/bowtie2-hg38/GCA_000001405.15_GRCh38_full_analysis_set.fna.bowtie_index"
params.alignBowtie2.options = "--fast-local --phred33 --no-unal "


//Rule samtoolsSort: sort and index bam with human reads
params.samtoolsSort.conda = "$condabase/bowtie2-env"
params.resources.samtoolsSort.cpus= 2
params.resources.samtoolsSort.mem = "1 GB"


//Rule multiQC
params.multiQC.conda = "$condabase/multiqc-env"
params.resources.multiQC.cpus= 12
params.resources.multiQC.mem = "12 GB"
params.multiQC.configyaml = "/home/ccarlos/repos/metagenomics-nf/config/multiqc_1.yaml"

//Rule concatFastq
params.concatFastq.conda = "$condabase/humann-env"
params.resources.concatFastq.cpus= 4
params.resources.concatFastq.mem = "4 GB"


//*****************//
// GENERAL OPTIONS //
//*****************//
cleanup = false
conda.enabled = false
params.resources.default.cpus = 4
params.resources.default.mem = "8 GB"

params.mapping_tool = "bowtie2"

profiles {
    conda {
      process.conda = "$condabase/bioinfo1"
    }
}

dag {
    enabled = true
    overwrite = true
    file = "pipeline_dag.html"
}
report {
    enabled = true
    overwrite = true
    file = "report.html"
}

//process {
//  executor = "slurm"
//  queueSize = 200
//  submitRateLimit = "10sec"
//}

// DOCKER OPTIONS
process {
    withName:doTrimmomatic{
        container = 'staphb/trimmomatic'
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:doCutadapt{
        container = 'pipecraft/cutadapt:0'
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:doBBduk{
        container = 'nanozoo/bbmap:38.86--9ebcbfa' // 'staphb/bbtools' falla, necesita dependencias
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:concatFastq {
        container = 'nsheff/pigz'
    }
    withName:getFastQCIllumina {
        container = 'staphb/fastqc'
    }
    withName:multiQC {
        container = 'staphb/multiqc'
    }
    withName:samtoolsSort {
        container = 'staphb/samtools'
    }

}

docker {
    enabled = true
    sudo = true
}

