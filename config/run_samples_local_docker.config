//BASE DIRECTORIES
basedir = "/home/ccarlos/repos/rnaseqO3/"
datadir = "/home/ccarlos/data/resources"
condabase = "/home/ccarlos/anaconda3/envs"

//INPUTS
params.raw_fastq = "$basedir/test_data_ce/*_{1,2}.fastq.gz"

//OUTPUTS
env.results_dir = "$basedir/results/test_8"

//DIRECTORY WITH ADDITIONAL SCRIPTS
params.scriptsdir = "$env.results_dir/RevMetCM/scripts/"

//Global genome options
genomename = "Ce_PRJEB28388_WS292"
fasta = "$datadir/indices//Ce_PRJEB28388_WS292/c_elegans.PRJEB28388.WS292.genomic.fa"
transcripts_fasta = "$datadir/indices//Ce_PRJEB28388_WS292/c_elegans.PRJEB28388.WS292.mRNA_transcripts.fa"
annot = "$datadir/indices//Ce_PRJEB28388_WS292/c_elegans.PRJEB28388.WS292.canonical_geneset.gtf"

// Global workflow control
params.workflows.doCleanFastq = true //Execute the cleanfastq workflow (trimming and fastqc)
params.workflows.do_trim = true  //Do trimming with the selected tool
params.workflows.trimming_tool = "bbduk" //trimming tool: trimmomatic, cutadapt or bbduk --> with cutadapt hisat2 seems to align more
params.workflows.doMultiQC = true

// Rule getFastQCIllumina: Quality control of input and trimmed fastq using FastQC
params.getFastQCIllumina.conda = "$condabase/fastqc-env"
params.resources.getFastQCIllumina.cpus= 4
params.resources.getFastQCIllumina.mem = "4 GB"
params.getFastQCIllumina.do_fastqc_raw = true
params.getFastQCIllumina.do_fastqc_trim = true
params.getFastQCIllumina.do_fastqc_trim_single = true

//Rule doTrimmomatic: trim fastq
params.doTrimmomatic.conda = "$condabase/trimmomatic-env"
params.resources.doTrimmomatic.cpus= 4
params.resources.doTrimmomatic.mem = "4 GB"
params.doTrimmomatic.illuminaclip = "$datadir/Adapters-for-MGI_simpletrimming.txt:2:30:10"
params.doTrimmomatic.slidingwindow = "20:30"
params.doTrimmomatic.minlen = 75


//Rule doCutadapt: trim fastq
params.doCutadapt.conda = "$condabase/"
params.resources.doCutadapt.cpus= 4
params.resources.doCutadapt.mem = "4 GB"
params.doCutadapt.illuminaclip = "$datadir/Adapters-for-MGI_simpletrimming.txt"
params.doCutadapt.minlength = "75:75"
params.doCutadapt.quality_cutoff_fw = 20
params.doCutadapt.quality_cutoff_rv = 20
params.doCutadapt.extra_args = ""

//Rule doBBduk: trim fastq
params.doBBduk.conda = "$condabase/"
params.resources.doBBduk.cpus= 4
params.resources.doBBduk.mem = "4 GB"
params.doBBduk.illuminaclip = "$datadir/Adapters-for-MGI_simpletrimming.fasta"
params.doBBduk.k = 23
params.doBBduk.mink = 11
params.doBBduk.hdist = 1
params.doBBduk.trimpolya=10
params.doBBduk.extra_args=""

//Rule alignHISAT2: index
params.buildindexHISAT2.conda = "$condabase/"
params.resources.buildindexHISAT2.cpus= 12
params.resources.buildindexHISAT2.mem = "12 GB"
params.buildindexHISAT2.index_dir = "HISAT2-2.2.1_$genomename"
params.buildindexHISAT2.index_name = "WS292_trans"
params.buildindexHISAT2.fasta = "$fasta"
params.buildindexHISAT2.annot = "$annot"
params.buildindexHISAT2.options = ""
params.buildindexHISAT2.do_index = true

//Rule alignHISAT2: align
params.alignHISAT2.conda = "$condabase/"
params.resources.alignHISAT2.cpus= 12
params.resources.alignHISAT2.mem = "12 GB"
params.alignHISAT2.index = "$datadir/indices/Ce_PRJEB28388_WS292/hisat2_index/genome_tran_ce" ///indices/hisat2_mm38_Kim_genome_trans/grcm38_tran/genome_tran"
params.alignHISAT2.options = "--phred33 --dta " //dta for downstream transcriptome assembly; --tmo only mapping (seems to align less reads)
params.alignHISAT2.do_hisat2 = true

// Rule buildindexSTAR: index genome
params.buildindexSTAR.conda = "$condabase/"
params.resources.buildindexSTAR.cpus= 12
params.resources.buildindexSTAR.mem = "12 GB"
params.buildindexSTAR.index_name = 
params.buildindexSTAR.genomeSAindexNbases = 12 //14 for bigger genomes
params.buildindexSTAR.sjdbOverhang = 100
params.buildindexSTAR.index_name = "STAR2.7.11b_$genomename"
params.buildindexSTAR.fasta = "$fasta"
params.buildindexSTAR.annot = "$annot"
params.buildindexSTAR.do_index = false

//Rule alignSTAR: align
params.alignSTAR.conda = "$condabase/"
params.resources.alignSTAR.cpus= 12
params.resources.alignSTAR.mem = "12 GB"
params.alignSTAR.index = "$datadir/indices/Ce_PRJEB28388_WS292/star_index/"
params.alignSTAR.options = "" //dta for downstream transcriptome assembly; --tmo only mapping (seems to align less reads)
params.alignSTAR.do_star = true

//Rule alignSTAR2ndPass: align with splice junctions from 1st pass
params.alignSTAR2ndPass.conda = "$condabase/"
params.resources.alignSTAR2ndPass.cpus= 12
params.resources.alignSTAR2ndPass.mem = "12 GB"
params.alignSTAR2ndPass.index = "$datadir/indices/Ce_PRJEB28388_WS292/star_index/"
params.alignSTAR2ndPass.options = "" //dta for downstream transcriptome assembly; --tmo only mapping (seems to align less reads)
params.alignSTAR2ndPass.do_star = true


// Rule quantStringtie2: quantify
params.quantStringtie2.conda = "$condabase/"
params.resources.quantStringtie2.cpus= 4
params.resources.quantStringtie2.mem = "4 GB"
params.quantStringtie2.annot = "$annot"
params.quantStringtie2.options = ""
params.quantStringtie2.do_stringtie = true

// Rule mergeStringtie2: quantify
params.mergeStringtie2.conda = "$condabase/"
params.resources.mergeStringtie2.cpus= 4
params.resources.mergeStringtie2.mem = "8 GB"
params.mergeStringtie2.readlength = 150

// Rule buildindexSalmon: create salmon index 
params.buildindexSalmon.conda = "$condabase/"
params.resources.buildindexSalmon.cpus= 12
params.resources.buildindexSalmon.mem = "12 GB"
params.buildindexSalmon.name = "Salmon-1.10.3_$genomename"
params.buildindexSalmon.transcripts_fasta = "$transcripts_fasta"
params.buildindexSalmon.genome_fasta = "$fasta"
params.buildindexSalmon.annot = "$annot"
params.buildindexSalmon.mode = "genome_decoy" // transcripts_only, genome_decoy, generated decoy, all
params.buildindexSalmon.k = 31
params.buildindexSalmon.options = ""
params.buildindexSalmon.do_index = false

// Rule quantSalmon: quantify
params.quantSalmon.conda = "$condabase/"
params.resources.quantSalmon.cpus= 12
params.resources.quantSalmon.mem = "12 GB"
params.quantSalmon.index = "$datadir/indices/Ce_PRJEB28388_WS292/salmon_index"
params.quantSalmon.options = ""
params.quantSalmon.do_salmon = true

//Rule multiQC
params.multiQC.conda = "$condabase/multiqc-env"
params.resources.multiQC.cpus= 12
params.resources.multiQC.mem = "12 GB"
params.multiQC.configyaml = "/home/ccarlos/repos/metagenomics-nf/config/multiqc_1.yaml"

//Rule concatFastq
params.concatFastq.conda = "$condabase/humann-env"
params.resources.concatFastq.cpus= 4
params.resources.concatFastq.mem = "4 GB"


//*****************//
// GENERAL OPTIONS //
//*****************//
cleanup = false
conda.enabled = false
params.resources.default.cpus = 4
params.resources.default.mem = "8 GB"

params.mapping_tool = "bowtie2"

profiles {
    conda {
      process.conda = "$condabase/bioinfo1"
    }
}

dag {
    enabled = true
    overwrite = true
    file = "pipeline_dag.html"
}
report {
    enabled = true
    overwrite = true
    file = "report.html"
}

//process {
//  executor = "slurm"
//  queueSize = 200
//  submitRateLimit = "10sec"
//}

// DOCKER OPTIONS
process {
    withName:doTrimmomatic{
        container = 'staphb/trimmomatic'
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:doCutadapt{
        container = 'pipecraft/cutadapt:0'
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:doBBduk{
        container = 'nanozoo/bbmap:38.86--9ebcbfa' // 'staphb/bbtools' falla, necesita dependencias
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:buildindexHISAT2{
        container = 'ccarlos/registry:HISAT2-2.2.1' //'nanozoo/hisat2:2.2.1--75357cd'
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:alignHISAT2{
        container = 'ccarlos/registry:HISAT2-2.2.1' //'nanozoo/hisat2:2.2.1--75357cd'
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:buildindexSTAR{
        container =  'ccarlos/registry:STAR-2.7.11b' // 'nanozoo/hisat2:2.2.1--75357cd'// 'mpgagebioinformatics/star:2.7.11b'
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:alignSTAR{
        container =  'ccarlos/registry:STAR-2.7.11b' // 'nanozoo/hisat2:2.2.1--75357cd'// 'mpgagebioinformatics/star:2.7.11b'
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"   
    }
    withName:alignSTAR2ndPass{
        container =  'ccarlos/registry:STAR-2.7.11b' // 'nanozoo/hisat2:2.2.1--75357cd'// 'mpgagebioinformatics/star:2.7.11b'
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:quantStringtie2{
        container =  'ccarlos/registry:stringtie2-v2.2.2'
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:mergeStringtie2{
        container =  'ccarlos/registry:stringtie2-v2.2.2'
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:buildindexSalmon{
        container =  'combinelab/salmon'
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:quantSalmon{
        container =  'combinelab/salmon'
        containerOptions = "--mount type=bind,source=$datadir,target=$datadir"
    }
    withName:getFastQCIllumina {
        container = 'staphb/fastqc'
    }
    withName:multiQC {
        container = 'staphb/multiqc'
    }
}

docker {
    enabled = true
    sudo = true
}

